[{"/Users/zoeng/git/secretSantaGeneratorWebApp/src/index.js":"1","/Users/zoeng/git/secretSantaGeneratorWebApp/src/App.js":"2","/Users/zoeng/git/secretSantaGeneratorWebApp/src/reportWebVitals.js":"3","/Users/zoeng/git/secretSantaGeneratorWebApp/src/components/navbar.js":"4","/Users/zoeng/git/secretSantaGeneratorWebApp/src/containers/notFound.js":"5","/Users/zoeng/git/secretSantaGeneratorWebApp/src/containers/unauthenticated/login.js":"6","/Users/zoeng/git/secretSantaGeneratorWebApp/src/containers/unauthenticated/home.js":"7","/Users/zoeng/git/secretSantaGeneratorWebApp/src/containers/unauthenticated/registration.js":"8","/Users/zoeng/git/secretSantaGeneratorWebApp/src/components/footer.js":"9","/Users/zoeng/git/secretSantaGeneratorWebApp/src/containers/authenticated/group/groupDashboard.js":"10","/Users/zoeng/git/secretSantaGeneratorWebApp/src/containers/authenticated/group/createGroup.js":"11","/Users/zoeng/git/secretSantaGeneratorWebApp/src/containers/authenticated/user/userDashboard.js":"12","/Users/zoeng/git/secretSantaGeneratorWebApp/src/containers/unauthenticated/registration2.js":"13","/Users/zoeng/git/secretSantaGeneratorWebApp/src/containers/authenticated/user/updatePassword.js":"14","/Users/zoeng/git/secretSantaGeneratorWebApp/src/containers/authenticated/group/joinGroup.js":"15","/Users/zoeng/git/secretSantaGeneratorWebApp/src/containers/authenticated/group/addExclusion.js":"16","/Users/zoeng/git/secretSantaGeneratorWebApp/src/containers/authenticated/user/updateProfile.js":"17","/Users/zoeng/git/secretSantaGeneratorWebApp/src/containers/authenticated/user/profile.js":"18","/Users/zoeng/git/secretSantaGeneratorWebApp/src/containers/authenticated/wishlist/wishlist.js":"19","/Users/zoeng/git/secretSantaGeneratorWebApp/src/containers/unauthenticated/about.js":"20"},{"size":500,"mtime":1615161364903,"results":"21","hashOfConfig":"22"},{"size":3002,"mtime":1621475704690,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":1615161364904,"results":"24","hashOfConfig":"22"},{"size":1294,"mtime":1620876829921,"results":"25","hashOfConfig":"22"},{"size":223,"mtime":1621474755773,"results":"26","hashOfConfig":"22"},{"size":3085,"mtime":1622516636880,"results":"27","hashOfConfig":"22"},{"size":1342,"mtime":1621474879551,"results":"28","hashOfConfig":"22"},{"size":4882,"mtime":1622519389435,"results":"29","hashOfConfig":"22"},{"size":765,"mtime":1621468518582,"results":"30","hashOfConfig":"22"},{"size":2849,"mtime":1622517264671,"results":"31","hashOfConfig":"22"},{"size":5113,"mtime":1622516885791,"results":"32","hashOfConfig":"22"},{"size":2936,"mtime":1622516334117,"results":"33","hashOfConfig":"22"},{"size":4151,"mtime":1622516633158,"results":"34","hashOfConfig":"22"},{"size":1534,"mtime":1621474321377,"results":"35","hashOfConfig":"22"},{"size":3131,"mtime":1622516984951,"results":"36","hashOfConfig":"22"},{"size":4310,"mtime":1622519954915,"results":"37","hashOfConfig":"22"},{"size":1134,"mtime":1621475205837,"results":"38","hashOfConfig":"22"},{"size":1241,"mtime":1622519994322,"results":"39","hashOfConfig":"22"},{"size":2819,"mtime":1622517229458,"results":"40","hashOfConfig":"22"},{"size":581,"mtime":1621474801657,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1m9atli",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"44"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"/Users/zoeng/git/secretSantaGeneratorWebApp/src/index.js",[],["89","90"],"/Users/zoeng/git/secretSantaGeneratorWebApp/src/App.js",[],"/Users/zoeng/git/secretSantaGeneratorWebApp/src/reportWebVitals.js",[],"/Users/zoeng/git/secretSantaGeneratorWebApp/src/components/navbar.js",[],"/Users/zoeng/git/secretSantaGeneratorWebApp/src/containers/notFound.js",[],"/Users/zoeng/git/secretSantaGeneratorWebApp/src/containers/unauthenticated/login.js",["91","92","93"],"import React, {useState} from 'react';\nimport Form from 'react-bootstrap/Form';\n//import Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport { Link, Redirect, useHistory } from \"react-router-dom\";\nimport { Input, Button } from 'react-rainbow-components';\nimport Alert from 'react-bootstrap/Alert';\n\nconst Login = () => {\n  const history = useHistory();\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n\n  const login = () => {\n    const request = {email: email, password: password}\n    console.log(request)\n    history.push('/dashboard');\n  }\n\n  /*const v1 = (\n    <Container fluid className=\"container\">\n      <h1>Login</h1>\n      <Form>\n        <Form.Group as={Col} md=\"6\" controlId=\"formEmail\">\n          <Form.Label>Email address</Form.Label>\n          <Form.Control\n            type=\"email\"\n            placeholder=\"Email\"\n            value={email}\n            onChange={e => {setEmail(e.target.value)}}/>\n        </Form.Group>\n        <Form.Group as={Col} md=\"6\" controlId=\"formPassword\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Password\"\n            value={password}\n            onChange={e => {setPassword(e.target.value)}}/>\n        </Form.Group>\n        <Col md=\"6\">\n          <Button variant=\"primary\" type=\"submit\" onClick={login}>\n            Login\n          </Button>\n          <Form.Text style={{fontSize: '16px', marginTop:'20px'}}>\n            Don't have an account? <Link to=\"/register\">Register now!</Link>\n          </Form.Text>\n        </Col>\n      </Form>\n    </Container>\n  )*/\n\n  const v2 = (\n    <div style ={{textAlign:'center', alignItems: 'center', display: 'flex'}}>\n      <Container fluid className=\"container\">\n        <h1>Login</h1>\n        <Row>\n          <Col lg={3}></Col>\n          <Col lg={6}>\n            <Input\n              label=\"Email\"\n              placeholder=\"inputEmail@gmail.com\"\n              type=\"email\"\n              className=\"rainbow-p-around_medium infoInput\"\n              value={email}\n              onChange={e => {setEmail(e.target.value)}}\n            />\n            <Input\n              label=\"Password\"\n              placeholder=\"**********\"\n              type=\"password\"\n              className=\"rainbow-p-around_medium infoInput\"\n              value={password}\n              onChange={e => {setPassword(e.target.value)}}\n            />\n            <Button\n              label=\"Login\"\n              onClick={login}\n              variant=\"brand\"\n              className=\"rainbow-m-around_medium\"\n              style={{marginTop: '15px', width: '250px'}}\n            />\n            <div style={{marginTop: '15px'}}>\n              Don't have an account? <Link to=\"/register\">Register now!</Link>\n            </div>\n          </Col>\n          <Col lg={3}></Col>\n        </Row>\n      </Container>\n    </div>\n  )\n  return (\n    <div>\n      {v2}\n    </div>\n  );\n\n}\n\nexport default Login;\n","/Users/zoeng/git/secretSantaGeneratorWebApp/src/containers/unauthenticated/home.js",[],"/Users/zoeng/git/secretSantaGeneratorWebApp/src/containers/unauthenticated/registration.js",["94"],"/Users/zoeng/git/secretSantaGeneratorWebApp/src/components/footer.js",[],"/Users/zoeng/git/secretSantaGeneratorWebApp/src/containers/authenticated/group/groupDashboard.js",["95","96","97","98"],"import React, {useState} from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Table from 'react-bootstrap/Table';\nimport { RenderIf } from 'react-rainbow-components';\n\nconst GroupDashboard = (props) => {\n\n  let { groupId } = useParams();\n  const [group, setGroup] = useState({})\n\n  var isOwner = true;\n  var isPaired = false;\n  var name = \"Test\";\n\n  const createPairings = () => {\n    alert(\"create pairings clicked\");\n  }\n\n  const groupMembers = [\n    {\n      name: \"Test\",\n      address: '123 Test St',\n      wishlist: 'food',\n    },\n    {\n      name: \"Test1\",\n      address: '321 Test St',\n      wishlist: 'Gift card',\n    },\n    {\n      name: \"Test2\",\n      address: '100 Test St',\n      wishlist: 'Clothes',\n    },\n\n  ]\n\n  const signupDeadline = new Date();\n  const endDate = new Date();\n\n  let tableBody = groupMembers.map(member => {\n    return(\n      <tr>\n        <td>{member.name}</td>\n        <td>{member.address}</td>\n        <td>{member.wishlist}</td>\n      </tr>\n    )\n  })\n\n  return (\n    <Container fluid className=\"container\">\n      <div style={{marginTop: '10px', marginBottom: '15px'}}>\n        <h1>Group Dashboard</h1>\n        <Row>\n          <Col lg={2}>\n            <Link to={{\n              pathname: \"/wishlist\",\n              state: {\n                groupId: groupId\n              }\n            }}>\n              <Button variant=\"primary\" style={{marginTop:'10px'}}>Update Wishlist</Button>\n            </Link>\n          </Col>\n          <RenderIf isTrue={!isPaired}>\n            <Col lg={2}>\n              <Link to={{\n                pathname: \"/addExclusion\",\n                state: {\n                  groupId: groupId,\n                }\n              }}>\n                <Button variant=\"primary\" style={{marginTop:'10px'}}>Add Exclusion</Button>\n              </Link>\n            </Col>\n          </RenderIf>\n          <RenderIf isTrue={isOwner && !isPaired}>\n            <Col lg={2}>\n              <Button variant=\"secondary\" onClick={createPairings} style={{marginTop:'10px'}}>Create Pairings</Button>\n            </Col>\n          </RenderIf>\n        </Row>\n        <RenderIf isTrue={isPaired}>\n          <div style={{marginTop: '20px', marginBottom: '20px'}}>\n            <h4>You are the Secret Santa for {name}!</h4>\n          </div>\n        </RenderIf>\n      </div>\n      <div>\n        <Table responsive=\"lg\">\n          <thead>\n            <tr>\n              <th>Name</th>\n              <th>Address</th>\n              <th>Wishlist</th>\n            </tr>\n          </thead>\n          <tbody>\n            {tableBody}\n          </tbody>\n        </Table>\n      </div>\n    </Container>\n  );\n}\n\nexport default GroupDashboard;\n","/Users/zoeng/git/secretSantaGeneratorWebApp/src/containers/authenticated/group/createGroup.js",["99"],"import React, {useState} from 'react';\n//import Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Container from 'react-bootstrap/Container';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Alert from 'react-bootstrap/Alert';\nimport { Link } from \"react-router-dom\";\n//import moment from 'moment';\n//import { SingleDatePicker } from 'react-dates';\nimport { DatePicker, Input, Button, RenderIf } from 'react-rainbow-components';\n\nconst CreateGroup = (props) => {\n\n  const [groupName, setGroupName] = useState('')\n  const [signupDeadline, setSignUpDeadline] = useState(new Date())\n  const [endDate, setEndDate] = useState(new Date())\n  const [showError, setShowError] = useState(false)\n\n//  const [isFocused, setIsFocused] = useState(false)\n  const now = new Date();\n\n  const submitHandler = () => {\n    if (validateRequest()){\n      setShowError(false)\n      const request = {name: groupName, signUpEndDate: signupDeadline, endDate: endDate}\n      console.log(request)\n    } else{\n      setShowError(true);\n      console.log(\"error\")\n    }\n  }\n\n  const validateRequest = () => {\n    if (signupDeadline <= now || endDate <= now || signupDeadline >= endDate){\n      return false\n    }\n    return true;\n  }\n\n    /*\n    <SingleDatePicker\n      date={endDate}\n      onDateChange={setEndDate(date)}\n      focused={isFocused}\n      onFocusChange={setFocused(focused)}\n      id=\"date1\"\n      numberOfMonths={1}\n    />\n    */\n\n  const v1 = (\n    <Container fluid className=\"container\">\n      <h1>Create Group</h1>\n      <RenderIf isTrue={showError}>\n        <div style={{marginTop: '20px', marginBottom: '20px'}}>\n          <Alert variant=\"danger\">Please enter valid information</Alert>\n        </div>\n      </RenderIf>\n      <Form>\n        <Form.Group as={Col} md=\"6\" controlId=\"formGroupName\">\n          <Form.Label>Group Name</Form.Label>\n          <Form.Control type=\"text\" placeholder=\"Group Name\" value={groupName} onChange={e => setGroupName(e.target.value)}/>\n        </Form.Group>\n        <Form.Group as={Col} md=\"6\" controlId=\"formSignupDeadline\">\n          <Form.Label>Signup Deadline</Form.Label>\n          <DatePicker\n              id=\"datePicker-1\"\n              value={signupDeadline}\n              onChange={value => setSignUpDeadline(value)}\n              label=\"Signup Deadline\"\n              formatStyle=\"large\"\n          />\n        </Form.Group>\n        <Form.Group as={Col} md=\"6\" controlId=\"formEndDate\">\n          <Form.Label>End Date</Form.Label>\n          <DatePicker\n              id=\"datePicker-1\"\n              value={endDate}\n              onChange={value => setEndDate(value)}\n              label=\"End Date\"\n              formatStyle=\"large\"\n          />\n        </Form.Group>\n        <Col md=\"6\">\n          <Button variant=\"primary\" type=\"submit\" onClick={submitHandler}>\n            Create Group\n          </Button>\n          <Form.Text style={{fontSize: '16px', marginTop:'20px'}}>\n            <Link to=\"/dashboard\">Back</Link>\n          </Form.Text>\n        </Col>\n      </Form>\n    </Container>\n  )\n\n  const v2 = (\n    <div style ={{textAlign:'center', alignItems: 'center', display: 'flex'}}>\n      <Container fluid className=\"container\">\n        <h1>Create Group</h1>\n        <RenderIf isTrue={showError}>\n          <Alert variant=\"danger\">Please enter valid information</Alert>\n        </RenderIf>\n        <Row>\n          <Col lg={3}></Col>\n          <Col lg={6}>\n            <Input\n              label=\"Group Name\"\n              placeholder=\"Group Name\"\n              type=\"text\"\n              className=\"rainbow-p-around_medium infoInput\"\n              style={{marginTop: '10px'}}\n              value={groupName}\n              onChange={e => {setGroupName(e.target.value)}}\n            />\n            <DatePicker\n                id=\"datePicker-1\"\n                value={signupDeadline}\n                onChange={value => setSignUpDeadline(value)}\n                label=\"Signup Deadline\"\n                formatStyle=\"large\"\n                className=\"infoInput\"\n            />\n            <DatePicker\n                id=\"datePicker-1\"\n                value={endDate}\n                onChange={value => setEndDate(value)}\n                label=\"End Date\"\n                formatStyle=\"large\"\n                className=\"infoInput\"\n            />\n            <Link to= \"/dashboard\">\n              <Button\n                label=\"Back\"\n                variant=\"brand\"\n                className=\"rainbow-m-around_medium\"\n                style={{marginTop: '20px', width: '225px', marginLeft:'10px', marginRight:'10px'}}\n              />\n            </Link>\n            <Button\n              label=\"Create Group\"\n              onClick={submitHandler}\n              variant=\"brand\"\n              className=\"rainbow-m-around_medium\"\n              style={{marginTop: '20px', width: '225px', marginLeft:'10px', marginRight:'10px'}}\n            />\n          </Col>\n          <Col lg={3}></Col>\n        </Row>\n      </Container>\n    </div>\n  )\n\n  return (\n    <div>\n      {v2}\n    </div>\n  );\n}\n\n\nexport default CreateGroup;\n","/Users/zoeng/git/secretSantaGeneratorWebApp/src/containers/authenticated/user/userDashboard.js",[],"/Users/zoeng/git/secretSantaGeneratorWebApp/src/containers/unauthenticated/registration2.js",["100","101"],"import React, {useState} from 'react';\n//import Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Container from 'react-bootstrap/Container';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport { Link, withRouter } from \"react-router-dom\";\nimport { Input, Button } from 'react-rainbow-components';\nimport Alert from 'react-bootstrap/Alert';\n\nconst Registration2 = (props) => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const registration1 = props.location.state;\n\n  const submit = () => {\n    const request = {...registration1, email: email, password: password}\n    console.log(request)\n  }\n\n  /*const v1 = (\n    <Container fluid className=\"container\">\n      <h1>Registration</h1>\n      <Form>\n        <Col style={{marginBottom: '20px', marginTop: '15px'}}>\n          <Form.Text style={{fontSize: '16px'}}>\n            Already have an account? <Link to=\"/login\">Login now!</Link>\n          </Form.Text>\n        </Col>\n        <Col>\n          <Row>\n            <Form.Group as={Col} md=\"4\" controlId=\"formFirstName\">\n              <Form.Label>First Name</Form.Label>\n              <Form.Control type=\"firstName\" placeholder=\"First Name\"/>\n            </Form.Group>\n            <Form.Group as={Col} md=\"4\" controlId=\"formLastName\">\n              <Form.Label>Last Name</Form.Label>\n              <Form.Control type=\"lastName\" placeholder=\"Last Name\"/>\n            </Form.Group>\n          </Row>\n        </Col>\n        <Form.Group as={Col} md=\"6\" controlId=\"formAddress\">\n          <Form.Label>Address</Form.Label>\n          <Form.Control type=\"address\" placeholder=\"123 Main St. City, State 78701\"/>\n        </Form.Group>\n        <Form.Group as={Col} md=\"6\" controlId=\"formEmail\">\n          <Form.Label>Email address</Form.Label>\n          <Form.Control type=\"email\" placeholder=\"Email\"/>\n        </Form.Group>\n        <Form.Group as={Col} md=\"6\" controlId=\"formPassword\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control type=\"password\" placeholder=\"Password\"/>\n        </Form.Group>\n        <Col md=\"6\">\n          <Button variant=\"primary\" type=\"submit\" onClick={submit}>\n            Register\n          </Button>\n        </Col>\n      </Form>\n    </Container>\n  );*/\n\n  const v2 = (\n    <div style ={{textAlign:'center', alignItems: 'center', display: 'flex'}}>\n      <Container fluid className=\"container\">\n        <h1>Registration</h1>\n        <Row>\n          <Col lg={3}></Col>\n          <Col lg={6}>\n            <div style={{marginTop: '15px'}}>\n              Already have an account? <Link to=\"/login\">Login now!</Link>\n            </div>\n            </Col>\n          <Col lg={3}></Col>\n        </Row>\n        <Row>\n          <Col lg={3}></Col>\n          <Col lg={6}>\n            <Input\n              label=\"Email\"\n              placeholder=\"inputEmail@gmail.com\"\n              type=\"email\"\n              className=\"rainbow-p-around_medium infoInput\"\n              value={email}\n              onChange={(e) => {setEmail(e.target.value)}}\n            />\n            <Input\n              label=\"Password\"\n              placeholder=\"**********\"\n              type=\"password\"\n              className=\"rainbow-p-around_medium infoInput\"\n              value={password}\n              onChange={(e) => {setPassword(e.target.value)}}\n            />\n            <Link to= \"/register\">\n              <Button\n                label=\"Back\"\n                variant=\"brand\"\n                className=\"rainbow-m-around_medium\"\n                style={{marginTop: '20px', width: '225px', marginLeft:'10px', marginRight:'10px'}}\n              />\n            </Link>\n            <Button\n              label=\"Register\"\n              onClick={submit}\n              variant=\"brand\"\n              className=\"rainbow-m-around_medium\"\n              style={{marginTop: '20px', width: '225px', marginLeft:'10px', marginRight:'10px'}}\n            />\n          </Col>\n          <Col lg={3}></Col>\n        </Row>\n      </Container>\n    </div>\n  );\n\n  return (\n    <div>\n      {v2}\n    </div>\n  );\n}\n\nexport default withRouter(Registration2);\n","/Users/zoeng/git/secretSantaGeneratorWebApp/src/containers/authenticated/user/updatePassword.js",[],"/Users/zoeng/git/secretSantaGeneratorWebApp/src/containers/authenticated/group/joinGroup.js",["102","103","104"],"import React, {useState} from 'react';\n//import Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Container from 'react-bootstrap/Container';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport { Input, Button, RenderIf } from 'react-rainbow-components';\nimport Alert from 'react-bootstrap/Alert';\n\nimport { Link } from \"react-router-dom\";\n\nconst JoinGroup = (props) => {\n\n  const [groupId, setGroupId] = useState('')\n  const [wishlist, setWishlist] = useState('')\n\n  const submitHandler = () => {\n    const request = {groupId: groupId, wishlist: wishlist}\n    console.log(request)\n  }\n\n  const v1 = (\n    <Container fluid className=\"container\">\n      <h1>Join Group</h1>\n      <Form>\n        <Form.Group as={Col} md=\"6\" controlId=\"formGroupId\">\n          <Form.Label>Group Id</Form.Label>\n          <Form.Control type=\"text\" placeholder=\"Group Id\" value={groupId} onChange={e => setGroupId(e.target.value)}/>\n        </Form.Group>\n        <Form.Group as={Col} md=\"6\" controlId=\"formWishlist\">\n          <Form.Label>Wishlist</Form.Label>\n          <Form.Control type=\"text\" placeholder=\"Wishlist\" value={wishlist} onChange={e => setWishlist(e.target.value)}/>\n        </Form.Group>\n        <Col md=\"6\">\n          <Button variant=\"primary\" type=\"submit\" onClick={submitHandler}>\n            Join Group\n          </Button>\n          <Form.Text style={{fontSize: '16px', marginTop:'20px'}}>\n            <Link to=\"/dashboard\">Back</Link>\n          </Form.Text>\n        </Col>\n      </Form>\n    </Container>\n  )\n\n  const v2 = (\n    <div style ={{textAlign:'center', alignItems: 'center', display: 'flex'}}>\n      <Container fluid className=\"container\">\n        <h1>Join Group</h1>\n        <Row>\n          <Col lg={3}></Col>\n          <Col lg={6}>\n            <Input\n              label=\"Group Id\"\n              placeholder=\"Group Id\"\n              type=\"text\"\n              className=\"rainbow-p-around_medium infoInput\"\n              value={groupId}\n              onChange={e => {setGroupId(e.target.value)}}\n            />\n            <Input\n              label=\"Wishlist\"\n              placeholder=\"Wishlist\"\n              type=\"text\"\n              className=\"rainbow-p-around_medium infoInput\"\n              value={wishlist}\n              onChange={e => {setWishlist(e.target.value)}}\n            />\n            <Link to= \"/dashboard\">\n              <Button\n                label=\"Back\"\n                variant=\"brand\"\n                className=\"rainbow-m-around_medium\"\n                style={{marginTop: '20px', width: '225px', marginLeft:'10px', marginRight:'10px'}}\n              />\n            </Link>\n            <Button\n              label=\"Join Group\"\n              onClick={submitHandler}\n              variant=\"brand\"\n              className=\"rainbow-m-around_medium\"\n              style={{marginTop: '20px', width: '225px', marginLeft:'10px', marginRight:'10px'}}\n            />\n          </Col>\n          <Col lg={3}></Col>\n        </Row>\n      </Container>\n    </div>\n  )\n\n  return (\n    <div>\n      {v2}\n    </div>\n  );\n}\n\n\nexport default JoinGroup;\n","/Users/zoeng/git/secretSantaGeneratorWebApp/src/containers/authenticated/group/addExclusion.js",["105","106","107"],"/Users/zoeng/git/secretSantaGeneratorWebApp/src/containers/authenticated/user/updateProfile.js",[],"/Users/zoeng/git/secretSantaGeneratorWebApp/src/containers/authenticated/user/profile.js",["108"],"/Users/zoeng/git/secretSantaGeneratorWebApp/src/containers/authenticated/wishlist/wishlist.js",["109","110","111"],"import React, {useState} from 'react';\n//import Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Container from 'react-bootstrap/Container';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport { Input, Button, RenderIf } from 'react-rainbow-components';\nimport Alert from 'react-bootstrap/Alert';\nimport { Link, withRouter } from \"react-router-dom\";\n\nconst Wishlist = (props) => {\n\n  var isUpdate = true;\n  var groupId = props.location.state.groupId;\n\n  const [wishlist, setWishlist] = useState('')\n\n  const submitHandler = () => {\n    const request = {groupId: groupId, wishlist: wishlist}\n    console.log(request)\n  }\n\n  const v1 = (\n    <Container fluid className=\"container\">\n      <h1>{isUpdate ? 'Update' : 'Create'} Wishlist</h1>\n      <Form>\n        <Form.Group as={Col} md=\"6\" controlId=\"formWishlist\">\n          <Form.Label>Wishlist</Form.Label>\n          <Form.Control as=\"textarea\" placeholder=\"Wishlist\" value={wishlist} onChange={e=>setWishlist(e.target.value)}/>\n        </Form.Group>\n        <Col md=\"6\">\n          <Button variant=\"primary\" type=\"submit\" onClick={submitHandler}>\n            {isUpdate ? 'Update' : 'Create'} Wishlist\n          </Button>\n          <Form.Text style={{fontSize: '16px', marginTop:'20px'}}>\n            <Link to={\"/groupDashboard/\" + groupId}>Back</Link>\n          </Form.Text>\n        </Col>\n      </Form>\n    </Container>\n  )\n\n  const v2 = (\n    <div style ={{textAlign:'center', alignItems: 'center', display: 'flex'}}>\n      <Container fluid className=\"container\">\n        <h1>{isUpdate ? 'Update' : 'Create'} Wishlist</h1>\n        <Row>\n          <Col lg={3}></Col>\n          <Col lg={6}>\n            <Input\n              label=\"Wishlist\"\n              placeholder=\"Wishlist\"\n              type=\"text\"\n              className=\"rainbow-p-around_medium infoInput\"\n              value={wishlist}\n              onChange={e => {setWishlist(e.target.value)}}\n            />\n            <Link to={\"/groupDashboard/\" + groupId}>\n              <Button\n                label=\"Back\"\n                variant=\"brand\"\n                className=\"rainbow-m-around_medium\"\n                style={{marginTop: '20px', width: '225px', marginLeft:'10px', marginRight:'10px'}}\n              />\n            </Link>\n            <Button\n              label= {isUpdate ? 'Update Wishlist' : 'Create Wishlist'}\n              onClick={submitHandler}\n              variant=\"brand\"\n              className=\"rainbow-m-around_medium\"\n              style={{marginTop: '20px', width: '225px', marginLeft:'10px', marginRight:'10px'}}\n            />\n          </Col>\n          <Col lg={3}></Col>\n        </Row>\n      </Container>\n    </div>\n  )\n\n  return (\n    <div>\n      {v2}\n    </div>\n  );\n}\n\nexport default withRouter(Wishlist);\n","/Users/zoeng/git/secretSantaGeneratorWebApp/src/containers/unauthenticated/about.js",[],{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","severity":1,"message":"117","line":2,"column":8,"nodeType":"118","messageId":"119","endLine":2,"endColumn":12},{"ruleId":"116","severity":1,"message":"120","line":7,"column":16,"nodeType":"118","messageId":"119","endLine":7,"endColumn":24},{"ruleId":"116","severity":1,"message":"121","line":9,"column":8,"nodeType":"118","messageId":"119","endLine":9,"endColumn":13},{"ruleId":"116","severity":1,"message":"117","line":3,"column":8,"nodeType":"118","messageId":"119","endLine":3,"endColumn":12},{"ruleId":"116","severity":1,"message":"122","line":13,"column":10,"nodeType":"118","messageId":"119","endLine":13,"endColumn":15},{"ruleId":"116","severity":1,"message":"123","line":13,"column":17,"nodeType":"118","messageId":"119","endLine":13,"endColumn":25},{"ruleId":"116","severity":1,"message":"124","line":42,"column":9,"nodeType":"118","messageId":"119","endLine":42,"endColumn":23},{"ruleId":"116","severity":1,"message":"125","line":43,"column":9,"nodeType":"118","messageId":"119","endLine":43,"endColumn":16},{"ruleId":"116","severity":1,"message":"126","line":52,"column":9,"nodeType":"118","messageId":"119","endLine":52,"endColumn":11},{"ruleId":"116","severity":1,"message":"117","line":3,"column":8,"nodeType":"118","messageId":"119","endLine":3,"endColumn":12},{"ruleId":"116","severity":1,"message":"121","line":9,"column":8,"nodeType":"118","messageId":"119","endLine":9,"endColumn":13},{"ruleId":"116","severity":1,"message":"127","line":7,"column":25,"nodeType":"118","messageId":"119","endLine":7,"endColumn":33},{"ruleId":"116","severity":1,"message":"121","line":8,"column":8,"nodeType":"118","messageId":"119","endLine":8,"endColumn":13},{"ruleId":"116","severity":1,"message":"126","line":22,"column":9,"nodeType":"118","messageId":"119","endLine":22,"endColumn":11},{"ruleId":"116","severity":1,"message":"128","line":10,"column":10,"nodeType":"118","messageId":"119","endLine":10,"endColumn":20},{"ruleId":"116","severity":1,"message":"129","line":10,"column":22,"nodeType":"118","messageId":"119","endLine":10,"endColumn":27},{"ruleId":"116","severity":1,"message":"126","line":45,"column":9,"nodeType":"118","messageId":"119","endLine":45,"endColumn":11},{"ruleId":"116","severity":1,"message":"130","line":18,"column":16,"nodeType":"118","messageId":"119","endLine":18,"endColumn":23},{"ruleId":"116","severity":1,"message":"127","line":7,"column":25,"nodeType":"118","messageId":"119","endLine":7,"endColumn":33},{"ruleId":"116","severity":1,"message":"121","line":8,"column":8,"nodeType":"118","messageId":"119","endLine":8,"endColumn":13},{"ruleId":"116","severity":1,"message":"126","line":23,"column":9,"nodeType":"118","messageId":"119","endLine":23,"endColumn":11},"no-native-reassign",["131"],"no-negated-in-lhs",["132"],"no-unused-vars","'Form' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","'Alert' is defined but never used.","'group' is assigned a value but never used.","'setGroup' is assigned a value but never used.","'signupDeadline' is assigned a value but never used.","'endDate' is assigned a value but never used.","'v1' is assigned a value but never used.","'RenderIf' is defined but never used.","'DatePicker' is defined but never used.","'Input' is defined but never used.","'setUser' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]