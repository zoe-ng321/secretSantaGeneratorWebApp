[{"/Users/zoeng/git/secretSantaGeneratorWebApp/src/index.js":"1","/Users/zoeng/git/secretSantaGeneratorWebApp/src/App.js":"2","/Users/zoeng/git/secretSantaGeneratorWebApp/src/reportWebVitals.js":"3","/Users/zoeng/git/secretSantaGeneratorWebApp/src/components/navbar.js":"4","/Users/zoeng/git/secretSantaGeneratorWebApp/src/containers/notFound.js":"5","/Users/zoeng/git/secretSantaGeneratorWebApp/src/containers/unauthenticated/login.js":"6","/Users/zoeng/git/secretSantaGeneratorWebApp/src/containers/unauthenticated/home.js":"7","/Users/zoeng/git/secretSantaGeneratorWebApp/src/containers/unauthenticated/registration.js":"8","/Users/zoeng/git/secretSantaGeneratorWebApp/src/components/footer.js":"9","/Users/zoeng/git/secretSantaGeneratorWebApp/src/containers/authenticated/group/groupDashboard.js":"10","/Users/zoeng/git/secretSantaGeneratorWebApp/src/containers/authenticated/group/createGroup.js":"11","/Users/zoeng/git/secretSantaGeneratorWebApp/src/containers/authenticated/user/userDashboard.js":"12","/Users/zoeng/git/secretSantaGeneratorWebApp/src/containers/unauthenticated/registration2.js":"13","/Users/zoeng/git/secretSantaGeneratorWebApp/src/containers/authenticated/user/updatePassword.js":"14","/Users/zoeng/git/secretSantaGeneratorWebApp/src/containers/authenticated/group/joinGroup.js":"15","/Users/zoeng/git/secretSantaGeneratorWebApp/src/containers/authenticated/group/addExclusion.js":"16","/Users/zoeng/git/secretSantaGeneratorWebApp/src/containers/authenticated/user/updateProfile.js":"17","/Users/zoeng/git/secretSantaGeneratorWebApp/src/containers/authenticated/user/profile.js":"18","/Users/zoeng/git/secretSantaGeneratorWebApp/src/containers/authenticated/wishlist/wishlist.js":"19","/Users/zoeng/git/secretSantaGeneratorWebApp/src/containers/unauthenticated/about.js":"20"},{"size":500,"mtime":1615161364903,"results":"21","hashOfConfig":"22"},{"size":3012,"mtime":1622684544829,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":1615161364904,"results":"24","hashOfConfig":"22"},{"size":1294,"mtime":1620876829921,"results":"25","hashOfConfig":"22"},{"size":223,"mtime":1621474755773,"results":"26","hashOfConfig":"22"},{"size":3356,"mtime":1622685252196,"results":"27","hashOfConfig":"22"},{"size":1342,"mtime":1621474879551,"results":"28","hashOfConfig":"22"},{"size":4882,"mtime":1622519389435,"results":"29","hashOfConfig":"22"},{"size":765,"mtime":1621468518582,"results":"30","hashOfConfig":"22"},{"size":2849,"mtime":1622517264671,"results":"31","hashOfConfig":"22"},{"size":5113,"mtime":1622516885791,"results":"32","hashOfConfig":"22"},{"size":3031,"mtime":1622682061625,"results":"33","hashOfConfig":"22"},{"size":4442,"mtime":1622685366708,"results":"34","hashOfConfig":"22"},{"size":4006,"mtime":1622688417266,"results":"35","hashOfConfig":"22"},{"size":3131,"mtime":1622516984951,"results":"36","hashOfConfig":"22"},{"size":4310,"mtime":1622519954915,"results":"37","hashOfConfig":"22"},{"size":3611,"mtime":1622688150459,"results":"38","hashOfConfig":"22"},{"size":1465,"mtime":1622687409909,"results":"39","hashOfConfig":"22"},{"size":2819,"mtime":1622517229458,"results":"40","hashOfConfig":"22"},{"size":581,"mtime":1621474801657,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1m9atli",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"44"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"/Users/zoeng/git/secretSantaGeneratorWebApp/src/index.js",[],["90","91"],"/Users/zoeng/git/secretSantaGeneratorWebApp/src/App.js",[],"/Users/zoeng/git/secretSantaGeneratorWebApp/src/reportWebVitals.js",[],"/Users/zoeng/git/secretSantaGeneratorWebApp/src/components/navbar.js",[],"/Users/zoeng/git/secretSantaGeneratorWebApp/src/containers/notFound.js",[],"/Users/zoeng/git/secretSantaGeneratorWebApp/src/containers/unauthenticated/login.js",["92","93","94"],"/Users/zoeng/git/secretSantaGeneratorWebApp/src/containers/unauthenticated/home.js",[],"/Users/zoeng/git/secretSantaGeneratorWebApp/src/containers/unauthenticated/registration.js",["95"],"import React, {useState} from 'react';\n//import Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Container from 'react-bootstrap/Container';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport { Link } from \"react-router-dom\";\nimport { Input, Button } from 'react-rainbow-components';\n\nconst Registration = (props) =>{\n\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [address, setAddress] = useState('');\n\n  /*const v1 = (\n    <Container fluid className=\"container\">\n      <h1>Registration</h1>\n      <Form>\n        <Col style={{marginBottom: '20px', marginTop: '15px'}}>\n          <Form.Text style={{fontSize: '16px'}}>\n            Already have an account? <Link to=\"/login\">Login now!</Link>\n          </Form.Text>\n        </Col>\n        <Col>\n          <Row>\n            <Form.Group as={Col} md=\"4\" controlId=\"formFirstName\">\n              <Form.Label>First Name</Form.Label>\n              <Form.Control\n                type=\"firstName\"\n                placeholder=\"First Name\"\n                value={firstName}\n                onChange={e => {setFirstName(e.target.value)}}/>\n            </Form.Group>\n            <Form.Group as={Col} md=\"4\" controlId=\"formLastName\">\n              <Form.Label>Last Name</Form.Label>\n              <Form.Control\n                type=\"lastName\"\n                placeholder=\"Last Name\"\n                value={lastName}\n                onChange={e => {setLastName(e.target.value)}}/>\n            </Form.Group>\n          </Row>\n        </Col>\n        <Form.Group as={Col} md=\"6\" controlId=\"formAddress\">\n          <Form.Label>Address</Form.Label>\n          <Form.Control\n            type=\"address\"\n            placeholder=\"123 Main St. City, State 78701\"\n            value={address}\n            onChange={e => {setAddress(e.target.value)}}/>\n        </Form.Group>\n        <Form.Group as={Col} md=\"6\" controlId=\"formEmail\">\n          <Form.Label>Email address</Form.Label>\n          <Form.Control type=\"email\" placeholder=\"Email\"/>\n        </Form.Group>\n        <Form.Group as={Col} md=\"6\" controlId=\"formPassword\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control type=\"password\" placeholder=\"Password\"/>\n        </Form.Group>\n        <Col md=\"6\">\n          <Button variant=\"primary\" type=\"submit\">\n            Register\n          </Button>\n        </Col>\n      </Form>\n    </Container>\n  );*/\n\n  const v2 = (\n    <div style ={{textAlign:'center', alignItems: 'center', display: 'flex'}}>\n      <Container fluid className=\"container\">\n        <h1>Registration</h1>\n        <Row>\n          <Col lg={3}></Col>\n          <Col lg={6}>\n            <div style={{marginTop: '15px'}}>\n              Already have an account? <Link to=\"/login\">Login now!</Link>\n            </div>\n            </Col>\n          <Col lg={3}></Col>\n        </Row>\n        <Row style={{marginTop: '10px'}}>\n          <Col>\n            <Row>\n              <Col lg={2}></Col>\n              <Col lg={4}>\n                <Input\n                  label=\"First Name\"\n                  placeholder=\"First\"\n                  type=\"text\"\n                  className=\"rainbow-p-around_medium infoInput\"\n                  value={firstName}\n                  onChange={e => {setFirstName(e.target.value)}}\n                />\n                </Col>\n                <Col lg={4}>\n                <Input\n                  label=\"Last Name\"\n                  placeholder=\"Last\"\n                  type=\"text\"\n                  className=\"rainbow-p-around_medium infoInput\"\n                  value={lastName}\n                  onChange={e => {setLastName(e.target.value)}}\n                />\n              </Col>\n              <Col lg={2}></Col>\n            </Row>\n          </Col>\n          </Row>\n          <Row>\n            <Col lg={3}></Col>\n            <Col lg={6}>\n              <Input\n                label=\"Address\"\n                placeholder=\"123 Main St. City, State 78701\"\n                type=\"text\"\n                className=\"rainbow-p-around_medium infoInput\"\n                value={address}\n                onChange={e => {setAddress(e.target.value)}}\n              />\n              <Link to={{\n                pathname: \"/register2\",\n                state: {\n                  firstName: firstName,\n                  lastName: lastName,\n                  address: address\n                }\n              }}>\n                <Button\n                  label=\"Next\"\n                  variant=\"brand\"\n                  className=\"rainbow-m-around_medium\"\n                  style={{marginTop: '20px', width: '250px'}}\n                />\n              </Link>\n            </Col>\n            <Col lg={3}></Col>\n        </Row>\n      </Container>\n    </div>\n  );\n\n  return (\n    <div>\n      {v2}\n    </div>\n  );\n}\n\nexport default Registration;\n","/Users/zoeng/git/secretSantaGeneratorWebApp/src/components/footer.js",[],"/Users/zoeng/git/secretSantaGeneratorWebApp/src/containers/authenticated/group/groupDashboard.js",["96","97","98","99"],"import React, {useState} from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Table from 'react-bootstrap/Table';\nimport { RenderIf } from 'react-rainbow-components';\n\nconst GroupDashboard = (props) => {\n\n  let { groupId } = useParams();\n  const [group, setGroup] = useState({})\n\n  var isOwner = true;\n  var isPaired = false;\n  var name = \"Test\";\n\n  const createPairings = () => {\n    alert(\"create pairings clicked\");\n  }\n\n  const groupMembers = [\n    {\n      name: \"Test\",\n      address: '123 Test St',\n      wishlist: 'food',\n    },\n    {\n      name: \"Test1\",\n      address: '321 Test St',\n      wishlist: 'Gift card',\n    },\n    {\n      name: \"Test2\",\n      address: '100 Test St',\n      wishlist: 'Clothes',\n    },\n\n  ]\n\n  const signupDeadline = new Date();\n  const endDate = new Date();\n\n  let tableBody = groupMembers.map(member => {\n    return(\n      <tr>\n        <td>{member.name}</td>\n        <td>{member.address}</td>\n        <td>{member.wishlist}</td>\n      </tr>\n    )\n  })\n\n  return (\n    <Container fluid className=\"container\">\n      <div style={{marginTop: '10px', marginBottom: '15px'}}>\n        <h1>Group Dashboard</h1>\n        <Row>\n          <Col lg={2}>\n            <Link to={{\n              pathname: \"/wishlist\",\n              state: {\n                groupId: groupId\n              }\n            }}>\n              <Button variant=\"primary\" style={{marginTop:'10px'}}>Update Wishlist</Button>\n            </Link>\n          </Col>\n          <RenderIf isTrue={!isPaired}>\n            <Col lg={2}>\n              <Link to={{\n                pathname: \"/addExclusion\",\n                state: {\n                  groupId: groupId,\n                }\n              }}>\n                <Button variant=\"primary\" style={{marginTop:'10px'}}>Add Exclusion</Button>\n              </Link>\n            </Col>\n          </RenderIf>\n          <RenderIf isTrue={isOwner && !isPaired}>\n            <Col lg={2}>\n              <Button variant=\"secondary\" onClick={createPairings} style={{marginTop:'10px'}}>Create Pairings</Button>\n            </Col>\n          </RenderIf>\n        </Row>\n        <RenderIf isTrue={isPaired}>\n          <div style={{marginTop: '20px', marginBottom: '20px'}}>\n            <h4>You are the Secret Santa for {name}!</h4>\n          </div>\n        </RenderIf>\n      </div>\n      <div>\n        <Table responsive=\"lg\">\n          <thead>\n            <tr>\n              <th>Name</th>\n              <th>Address</th>\n              <th>Wishlist</th>\n            </tr>\n          </thead>\n          <tbody>\n            {tableBody}\n          </tbody>\n        </Table>\n      </div>\n    </Container>\n  );\n}\n\nexport default GroupDashboard;\n","/Users/zoeng/git/secretSantaGeneratorWebApp/src/containers/authenticated/group/createGroup.js",["100"],"import React, {useState} from 'react';\n//import Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Container from 'react-bootstrap/Container';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Alert from 'react-bootstrap/Alert';\nimport { Link } from \"react-router-dom\";\n//import moment from 'moment';\n//import { SingleDatePicker } from 'react-dates';\nimport { DatePicker, Input, Button, RenderIf } from 'react-rainbow-components';\n\nconst CreateGroup = (props) => {\n\n  const [groupName, setGroupName] = useState('')\n  const [signupDeadline, setSignUpDeadline] = useState(new Date())\n  const [endDate, setEndDate] = useState(new Date())\n  const [showError, setShowError] = useState(false)\n\n//  const [isFocused, setIsFocused] = useState(false)\n  const now = new Date();\n\n  const submitHandler = () => {\n    if (validateRequest()){\n      setShowError(false)\n      const request = {name: groupName, signUpEndDate: signupDeadline, endDate: endDate}\n      console.log(request)\n    } else{\n      setShowError(true);\n      console.log(\"error\")\n    }\n  }\n\n  const validateRequest = () => {\n    if (signupDeadline <= now || endDate <= now || signupDeadline >= endDate){\n      return false\n    }\n    return true;\n  }\n\n    /*\n    <SingleDatePicker\n      date={endDate}\n      onDateChange={setEndDate(date)}\n      focused={isFocused}\n      onFocusChange={setFocused(focused)}\n      id=\"date1\"\n      numberOfMonths={1}\n    />\n    */\n\n  const v1 = (\n    <Container fluid className=\"container\">\n      <h1>Create Group</h1>\n      <RenderIf isTrue={showError}>\n        <div style={{marginTop: '20px', marginBottom: '20px'}}>\n          <Alert variant=\"danger\">Please enter valid information</Alert>\n        </div>\n      </RenderIf>\n      <Form>\n        <Form.Group as={Col} md=\"6\" controlId=\"formGroupName\">\n          <Form.Label>Group Name</Form.Label>\n          <Form.Control type=\"text\" placeholder=\"Group Name\" value={groupName} onChange={e => setGroupName(e.target.value)}/>\n        </Form.Group>\n        <Form.Group as={Col} md=\"6\" controlId=\"formSignupDeadline\">\n          <Form.Label>Signup Deadline</Form.Label>\n          <DatePicker\n              id=\"datePicker-1\"\n              value={signupDeadline}\n              onChange={value => setSignUpDeadline(value)}\n              label=\"Signup Deadline\"\n              formatStyle=\"large\"\n          />\n        </Form.Group>\n        <Form.Group as={Col} md=\"6\" controlId=\"formEndDate\">\n          <Form.Label>End Date</Form.Label>\n          <DatePicker\n              id=\"datePicker-1\"\n              value={endDate}\n              onChange={value => setEndDate(value)}\n              label=\"End Date\"\n              formatStyle=\"large\"\n          />\n        </Form.Group>\n        <Col md=\"6\">\n          <Button variant=\"primary\" type=\"submit\" onClick={submitHandler}>\n            Create Group\n          </Button>\n          <Form.Text style={{fontSize: '16px', marginTop:'20px'}}>\n            <Link to=\"/dashboard\">Back</Link>\n          </Form.Text>\n        </Col>\n      </Form>\n    </Container>\n  )\n\n  const v2 = (\n    <div style ={{textAlign:'center', alignItems: 'center', display: 'flex'}}>\n      <Container fluid className=\"container\">\n        <h1>Create Group</h1>\n        <RenderIf isTrue={showError}>\n          <Alert variant=\"danger\">Please enter valid information</Alert>\n        </RenderIf>\n        <Row>\n          <Col lg={3}></Col>\n          <Col lg={6}>\n            <Input\n              label=\"Group Name\"\n              placeholder=\"Group Name\"\n              type=\"text\"\n              className=\"rainbow-p-around_medium infoInput\"\n              style={{marginTop: '10px'}}\n              value={groupName}\n              onChange={e => {setGroupName(e.target.value)}}\n            />\n            <DatePicker\n                id=\"datePicker-1\"\n                value={signupDeadline}\n                onChange={value => setSignUpDeadline(value)}\n                label=\"Signup Deadline\"\n                formatStyle=\"large\"\n                className=\"infoInput\"\n            />\n            <DatePicker\n                id=\"datePicker-1\"\n                value={endDate}\n                onChange={value => setEndDate(value)}\n                label=\"End Date\"\n                formatStyle=\"large\"\n                className=\"infoInput\"\n            />\n            <Link to= \"/dashboard\">\n              <Button\n                label=\"Back\"\n                variant=\"brand\"\n                className=\"rainbow-m-around_medium\"\n                style={{marginTop: '20px', width: '225px', marginLeft:'10px', marginRight:'10px'}}\n              />\n            </Link>\n            <Button\n              label=\"Create Group\"\n              onClick={submitHandler}\n              variant=\"brand\"\n              className=\"rainbow-m-around_medium\"\n              style={{marginTop: '20px', width: '225px', marginLeft:'10px', marginRight:'10px'}}\n            />\n          </Col>\n          <Col lg={3}></Col>\n        </Row>\n      </Container>\n    </div>\n  )\n\n  return (\n    <div>\n      {v2}\n    </div>\n  );\n}\n\n\nexport default CreateGroup;\n","/Users/zoeng/git/secretSantaGeneratorWebApp/src/containers/authenticated/user/userDashboard.js",["101","102"],"import React, {useState, useEffect} from 'react';\nimport { Link } from 'react-router-dom';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\n\nconst UserDashboard = () => {\n\n  const [user, setUser] = useState({});\n  useEffect(() => {\n    \n  });\n\n  return (\n    <Container fluid className=\"container\">\n      <div style={{ direction: 'flex', flexDirection:'row'}}>\n        <h1>Dashboard</h1>\n        <Row>\n          <Col lg={2}>\n            <Link to=\"/createGroup\"><Button variant=\"primary\" style={{marginTop:'10px'}}>Create new group</Button></Link>\n          </Col>\n          <Col lg={2}>\n            <Link to=\"joinGroup\"><Button variant=\"primary\" style={{marginTop:'10px'}}>Join group</Button></Link>\n          </Col>\n        </Row>\n      </div>\n      <div style={{marginTop:\"15px\"}}>\n        <Row>\n          <Col lg={4}>\n            <Card className=\"groupCard\">\n              <Card.Body>\n                <Card.Title>Group 1</Card.Title>\n                <Card.Text>\n                  Some quick example text to build on the card title and make up the bulk of\n                  the card's content.\n                </Card.Text>\n                <Link to=\"/groupDashboard/1\"><Button variant=\"primary\">See group details</Button></Link>\n              </Card.Body>\n            </Card>\n          </Col>\n          <Col lg={4}>\n            <Card className=\"groupCard\">\n              <Card.Body>\n                <Card.Title>Group 2</Card.Title>\n                <Card.Text>\n                  Some quick example text to build on the card title and make up the bulk of\n                  the card's content.\n                </Card.Text>\n                <Link to=\"/groupDashboard/2\"><Button variant=\"primary\">See group details</Button></Link>\n              </Card.Body>\n            </Card>\n          </Col>\n          <Col lg={4}>\n            <Card className=\"groupCard\">\n              <Card.Body>\n                <Card.Title>Group 3</Card.Title>\n                <Card.Text>\n                  Some quick example text to build on the card title and make up the bulk of\n                  the card's content.\n                </Card.Text>\n                <Link to=\"/groupDashboard/3\"><Button variant=\"primary\">See group details</Button></Link>\n              </Card.Body>\n            </Card>\n          </Col>\n          <Col lg={4}>\n            <Card className=\"groupCard\">\n              <Card.Body>\n                <Card.Title>Group 4</Card.Title>\n                <Card.Text>\n                  Some quick example text to build on the card title and make up the bulk of\n                  the card's content.\n                </Card.Text>\n                <Link to=\"/groupDashboard/4\"><Button variant=\"primary\">See group details</Button></Link>\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    </Container>\n  );\n}\n\nexport default UserDashboard;\n","/Users/zoeng/git/secretSantaGeneratorWebApp/src/containers/unauthenticated/registration2.js",["103","104"],"/Users/zoeng/git/secretSantaGeneratorWebApp/src/containers/authenticated/user/updatePassword.js",["105"],"/Users/zoeng/git/secretSantaGeneratorWebApp/src/containers/authenticated/group/joinGroup.js",["106","107","108"],"import React, {useState} from 'react';\n//import Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Container from 'react-bootstrap/Container';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport { Input, Button, RenderIf } from 'react-rainbow-components';\nimport Alert from 'react-bootstrap/Alert';\n\nimport { Link } from \"react-router-dom\";\n\nconst JoinGroup = (props) => {\n\n  const [groupId, setGroupId] = useState('')\n  const [wishlist, setWishlist] = useState('')\n\n  const submitHandler = () => {\n    const request = {groupId: groupId, wishlist: wishlist}\n    console.log(request)\n  }\n\n  const v1 = (\n    <Container fluid className=\"container\">\n      <h1>Join Group</h1>\n      <Form>\n        <Form.Group as={Col} md=\"6\" controlId=\"formGroupId\">\n          <Form.Label>Group Id</Form.Label>\n          <Form.Control type=\"text\" placeholder=\"Group Id\" value={groupId} onChange={e => setGroupId(e.target.value)}/>\n        </Form.Group>\n        <Form.Group as={Col} md=\"6\" controlId=\"formWishlist\">\n          <Form.Label>Wishlist</Form.Label>\n          <Form.Control type=\"text\" placeholder=\"Wishlist\" value={wishlist} onChange={e => setWishlist(e.target.value)}/>\n        </Form.Group>\n        <Col md=\"6\">\n          <Button variant=\"primary\" type=\"submit\" onClick={submitHandler}>\n            Join Group\n          </Button>\n          <Form.Text style={{fontSize: '16px', marginTop:'20px'}}>\n            <Link to=\"/dashboard\">Back</Link>\n          </Form.Text>\n        </Col>\n      </Form>\n    </Container>\n  )\n\n  const v2 = (\n    <div style ={{textAlign:'center', alignItems: 'center', display: 'flex'}}>\n      <Container fluid className=\"container\">\n        <h1>Join Group</h1>\n        <Row>\n          <Col lg={3}></Col>\n          <Col lg={6}>\n            <Input\n              label=\"Group Id\"\n              placeholder=\"Group Id\"\n              type=\"text\"\n              className=\"rainbow-p-around_medium infoInput\"\n              value={groupId}\n              onChange={e => {setGroupId(e.target.value)}}\n            />\n            <Input\n              label=\"Wishlist\"\n              placeholder=\"Wishlist\"\n              type=\"text\"\n              className=\"rainbow-p-around_medium infoInput\"\n              value={wishlist}\n              onChange={e => {setWishlist(e.target.value)}}\n            />\n            <Link to= \"/dashboard\">\n              <Button\n                label=\"Back\"\n                variant=\"brand\"\n                className=\"rainbow-m-around_medium\"\n                style={{marginTop: '20px', width: '225px', marginLeft:'10px', marginRight:'10px'}}\n              />\n            </Link>\n            <Button\n              label=\"Join Group\"\n              onClick={submitHandler}\n              variant=\"brand\"\n              className=\"rainbow-m-around_medium\"\n              style={{marginTop: '20px', width: '225px', marginLeft:'10px', marginRight:'10px'}}\n            />\n          </Col>\n          <Col lg={3}></Col>\n        </Row>\n      </Container>\n    </div>\n  )\n\n  return (\n    <div>\n      {v2}\n    </div>\n  );\n}\n\n\nexport default JoinGroup;\n","/Users/zoeng/git/secretSantaGeneratorWebApp/src/containers/authenticated/group/addExclusion.js",["109","110","111"],"import React, {useState} from 'react';\n//import Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Container from 'react-bootstrap/Container';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\n\nimport { Link, withRouter } from \"react-router-dom\";\nimport { Select } from 'react-rainbow-components';\nimport { DatePicker, Input, Button, RenderIf } from 'react-rainbow-components';\nimport Alert from 'react-bootstrap/Alert';\n\nconst AddExclusion = (props) => {\n\n  const groupId = props.location.state.groupId;\n  const containerStyles = {\n    maxWidth: 700,\n  };\n\n  const options = [\n      { value: 'P1', label: 'Option 1' },\n      { value: 'P2', label: 'Option 2' },\n      { value: 'P3', label: 'Option 3' },\n  ];\n\n  const [person1, setPerson1] = useState('');\n  const [person2, setPerson2] = useState('');\n  const [showError, setShowError] = useState(false);\n\n\n  const submitHandler = () => {\n    if (validateRequest()){\n      setShowError(false)\n      const request = {groupId: groupId, person1: person1, person2: person2}\n      console.log(request)\n    } else {\n      setShowError(true)\n    }\n  }\n\n  const validateRequest = () => {\n    return person1 !== person2\n  }\n\n  const v1 = (\n    <Container fluid className=\"container\">\n      <h1>Add Exclusion</h1>\n      <Form>\n        <Form.Group as={Col} md=\"6\" controlId=\"formPerson1\">\n          <Select\n            label=\"Person 1\"\n            options={options}\n            id=\"example-select-1\"\n            style={containerStyles}\n            className=\"rainbow-m-vertical_x-large rainbow-p-horizontal_medium rainbow-m_auto\"\n            value={person1}\n            onChange={e => setPerson1(e.target.value)}\n          />\n        </Form.Group>\n        <Form.Group as={Col} md=\"6\" controlId=\"formPerson2\">\n          <Form.Label>Person 2</Form.Label>\n          <Form.Control as=\"select\" value={person2} onChange={e=>setPerson2(e.target.value)}>\n            <option>1</option>\n            <option>2</option>\n            <option>3</option>\n          </Form.Control>\n        </Form.Group>\n        <Col md=\"6\">\n          <Button variant=\"primary\" type=\"submit\" onClick={submitHandler}>\n            Submit\n          </Button>\n          <Form.Text style={{fontSize: '16px', marginTop:'20px'}}>\n            <Link to={\"/groupDashboard/\" + groupId}>Back</Link>\n          </Form.Text>\n        </Col>\n      </Form>\n    </Container>\n  )\n\n  const v2 = (\n    <div style ={{textAlign:'center', alignItems: 'center', display: 'flex'}}>\n      <Container fluid className=\"container\">\n        <h1>Add Exclusion</h1>\n        <RenderIf isTrue={showError}>\n          <Alert variant=\"danger\">Invalid input</Alert>\n        </RenderIf>\n        <Row>\n          <Col lg={3}></Col>\n          <Col lg={6}>\n            <Select\n              label=\"Person 1\"\n              options={options}\n              id=\"example-select-1\"\n              style={containerStyles}\n              className=\"rainbow-m-vertical_x-large rainbow-p-horizontal_medium rainbow-m_auto infoInput\"\n              value={person1}\n              onChange={e => setPerson1(e.target.value)}\n            />\n            <Select\n              label=\"Person 2\"\n              options={options}\n              id=\"example-select-1\"\n              style={containerStyles}\n              className=\"rainbow-m-vertical_x-large rainbow-p-horizontal_medium rainbow-m_auto infoInput\"\n              value={person2}\n              onChange={e => setPerson2(e.target.value)}\n            />\n            <Link to={\"/groupDashboard/\" + groupId}>\n              <Button\n                label=\"Back\"\n                variant=\"brand\"\n                className=\"rainbow-m-around_medium\"\n                style={{marginTop: '20px', width: '225px', marginLeft:'10px', marginRight:'10px'}}\n              />\n            </Link>\n            <Button\n              label=\"Add Exclusion\"\n              onClick={submitHandler}\n              variant=\"brand\"\n              className=\"rainbow-m-around_medium\"\n              style={{marginTop: '20px', width: '225px', marginLeft:'10px', marginRight:'10px'}}\n            />\n          </Col>\n          <Col lg={3}></Col>\n        </Row>\n      </Container>\n    </div>\n  )\n\n  return (\n    <div>\n      {v2}\n    </div>\n  );\n\n}\n\nexport default withRouter(AddExclusion);\n","/Users/zoeng/git/secretSantaGeneratorWebApp/src/containers/authenticated/user/updateProfile.js",["112","113","114"],"/Users/zoeng/git/secretSantaGeneratorWebApp/src/containers/authenticated/user/profile.js",["115"],"/Users/zoeng/git/secretSantaGeneratorWebApp/src/containers/authenticated/wishlist/wishlist.js",["116","117","118"],"import React, {useState} from 'react';\n//import Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Container from 'react-bootstrap/Container';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport { Input, Button, RenderIf } from 'react-rainbow-components';\nimport Alert from 'react-bootstrap/Alert';\nimport { Link, withRouter } from \"react-router-dom\";\n\nconst Wishlist = (props) => {\n\n  var isUpdate = true;\n  var groupId = props.location.state.groupId;\n\n  const [wishlist, setWishlist] = useState('')\n\n  const submitHandler = () => {\n    const request = {groupId: groupId, wishlist: wishlist}\n    console.log(request)\n  }\n\n  const v1 = (\n    <Container fluid className=\"container\">\n      <h1>{isUpdate ? 'Update' : 'Create'} Wishlist</h1>\n      <Form>\n        <Form.Group as={Col} md=\"6\" controlId=\"formWishlist\">\n          <Form.Label>Wishlist</Form.Label>\n          <Form.Control as=\"textarea\" placeholder=\"Wishlist\" value={wishlist} onChange={e=>setWishlist(e.target.value)}/>\n        </Form.Group>\n        <Col md=\"6\">\n          <Button variant=\"primary\" type=\"submit\" onClick={submitHandler}>\n            {isUpdate ? 'Update' : 'Create'} Wishlist\n          </Button>\n          <Form.Text style={{fontSize: '16px', marginTop:'20px'}}>\n            <Link to={\"/groupDashboard/\" + groupId}>Back</Link>\n          </Form.Text>\n        </Col>\n      </Form>\n    </Container>\n  )\n\n  const v2 = (\n    <div style ={{textAlign:'center', alignItems: 'center', display: 'flex'}}>\n      <Container fluid className=\"container\">\n        <h1>{isUpdate ? 'Update' : 'Create'} Wishlist</h1>\n        <Row>\n          <Col lg={3}></Col>\n          <Col lg={6}>\n            <Input\n              label=\"Wishlist\"\n              placeholder=\"Wishlist\"\n              type=\"text\"\n              className=\"rainbow-p-around_medium infoInput\"\n              value={wishlist}\n              onChange={e => {setWishlist(e.target.value)}}\n            />\n            <Link to={\"/groupDashboard/\" + groupId}>\n              <Button\n                label=\"Back\"\n                variant=\"brand\"\n                className=\"rainbow-m-around_medium\"\n                style={{marginTop: '20px', width: '225px', marginLeft:'10px', marginRight:'10px'}}\n              />\n            </Link>\n            <Button\n              label= {isUpdate ? 'Update Wishlist' : 'Create Wishlist'}\n              onClick={submitHandler}\n              variant=\"brand\"\n              className=\"rainbow-m-around_medium\"\n              style={{marginTop: '20px', width: '225px', marginLeft:'10px', marginRight:'10px'}}\n            />\n          </Col>\n          <Col lg={3}></Col>\n        </Row>\n      </Container>\n    </div>\n  )\n\n  return (\n    <div>\n      {v2}\n    </div>\n  );\n}\n\nexport default withRouter(Wishlist);\n","/Users/zoeng/git/secretSantaGeneratorWebApp/src/containers/unauthenticated/about.js",[],{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","severity":1,"message":"124","line":2,"column":8,"nodeType":"125","messageId":"126","endLine":2,"endColumn":12},{"ruleId":"123","severity":1,"message":"127","line":7,"column":16,"nodeType":"125","messageId":"126","endLine":7,"endColumn":24},{"ruleId":"123","severity":1,"message":"128","line":9,"column":8,"nodeType":"125","messageId":"126","endLine":9,"endColumn":13},{"ruleId":"123","severity":1,"message":"124","line":3,"column":8,"nodeType":"125","messageId":"126","endLine":3,"endColumn":12},{"ruleId":"123","severity":1,"message":"129","line":13,"column":10,"nodeType":"125","messageId":"126","endLine":13,"endColumn":15},{"ruleId":"123","severity":1,"message":"130","line":13,"column":17,"nodeType":"125","messageId":"126","endLine":13,"endColumn":25},{"ruleId":"123","severity":1,"message":"131","line":42,"column":9,"nodeType":"125","messageId":"126","endLine":42,"endColumn":23},{"ruleId":"123","severity":1,"message":"132","line":43,"column":9,"nodeType":"125","messageId":"126","endLine":43,"endColumn":16},{"ruleId":"123","severity":1,"message":"133","line":52,"column":9,"nodeType":"125","messageId":"126","endLine":52,"endColumn":11},{"ruleId":"123","severity":1,"message":"134","line":11,"column":10,"nodeType":"125","messageId":"126","endLine":11,"endColumn":14},{"ruleId":"123","severity":1,"message":"135","line":11,"column":16,"nodeType":"125","messageId":"126","endLine":11,"endColumn":23},{"ruleId":"123","severity":1,"message":"124","line":3,"column":8,"nodeType":"125","messageId":"126","endLine":3,"endColumn":12},{"ruleId":"123","severity":1,"message":"128","line":9,"column":8,"nodeType":"125","messageId":"126","endLine":9,"endColumn":13},{"ruleId":"123","severity":1,"message":"133","line":41,"column":9,"nodeType":"125","messageId":"126","endLine":41,"endColumn":11},{"ruleId":"123","severity":1,"message":"136","line":7,"column":25,"nodeType":"125","messageId":"126","endLine":7,"endColumn":33},{"ruleId":"123","severity":1,"message":"128","line":8,"column":8,"nodeType":"125","messageId":"126","endLine":8,"endColumn":13},{"ruleId":"123","severity":1,"message":"133","line":22,"column":9,"nodeType":"125","messageId":"126","endLine":22,"endColumn":11},{"ruleId":"123","severity":1,"message":"137","line":10,"column":10,"nodeType":"125","messageId":"126","endLine":10,"endColumn":20},{"ruleId":"123","severity":1,"message":"138","line":10,"column":22,"nodeType":"125","messageId":"126","endLine":10,"endColumn":27},{"ruleId":"123","severity":1,"message":"133","line":45,"column":9,"nodeType":"125","messageId":"126","endLine":45,"endColumn":11},{"ruleId":"123","severity":1,"message":"124","line":3,"column":8,"nodeType":"125","messageId":"126","endLine":3,"endColumn":12},{"ruleId":"123","severity":1,"message":"136","line":8,"column":25,"nodeType":"125","messageId":"126","endLine":8,"endColumn":33},{"ruleId":"123","severity":1,"message":"128","line":9,"column":8,"nodeType":"125","messageId":"126","endLine":9,"endColumn":13},{"ruleId":"139","severity":1,"message":"140","line":22,"column":6,"nodeType":"141","endLine":22,"endColumn":8,"suggestions":"142"},{"ruleId":"123","severity":1,"message":"136","line":7,"column":25,"nodeType":"125","messageId":"126","endLine":7,"endColumn":33},{"ruleId":"123","severity":1,"message":"128","line":8,"column":8,"nodeType":"125","messageId":"126","endLine":8,"endColumn":13},{"ruleId":"123","severity":1,"message":"133","line":23,"column":9,"nodeType":"125","messageId":"126","endLine":23,"endColumn":11},"no-native-reassign",["143"],"no-negated-in-lhs",["144"],"no-unused-vars","'Form' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","'Alert' is defined but never used.","'group' is assigned a value but never used.","'setGroup' is assigned a value but never used.","'signupDeadline' is assigned a value but never used.","'endDate' is assigned a value but never used.","'v1' is assigned a value but never used.","'user' is assigned a value but never used.","'setUser' is assigned a value but never used.","'RenderIf' is defined but never used.","'DatePicker' is defined but never used.","'Input' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'headers'. Either include it or remove the dependency array.","ArrayExpression",["145"],"no-global-assign","no-unsafe-negation",{"desc":"146","fix":"147"},"Update the dependencies array to be: [headers]",{"range":"148","text":"149"},[685,687],"[headers]"]